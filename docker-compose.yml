version: '3.8'

services:
  mysql:
    image: mysql:9.2.0
    container_name: mysql
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root1234
      - MYSQL_DATABASE=parkingdevgo
      - MYSQL_USER=user
      - MYSQL_PASSWORD=root1234
    networks:
      - go_network  
    command: --log-bin-trust-function-creators=1


  phpmyadmin:
    image: phpmyadmin:5.2.2
    container_name: phpmyadmin
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=mysql
      - PMA_USER=user
      - PMA_PASSWORD=root1234
    depends_on:
      - mysql
    networks:
      - go_network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - go_network

  redisinsight:
    image: redislabs/redisinsight:1.14.0
    container_name: redis_insight
    restart: always
    ports:
      - "8001:8001"
    environment:
      - REDIS_INSIGHT_DEFAULT_MODE=standalone
    depends_on:
      - redis
    networks:
      - go_network

  kafka:
    image: confluentinc/cp-kafka:7.9.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_KRAFT_MODE: "true"
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093  # Thay 0.0.0.0 bằng kafka
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LOG_DIRS: /var/lib/kafka/data 
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CLUSTER_ID: "Mk3OEYBSD34fcwNTJENDM2Qk"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ../data:/var/lib/kafka/data
    networks:
      - go_network

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    ports:
      - "8088:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - go_network
  # service backend go-lang
  crm.gobackend.com:
    container_name: go_backend_crm
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - mysql
      - redis
    ports:
      - "8008:8002"
    networks:
      - go_network

volumes:
  mysql_data:
  redis_data:
networks:
  go_network:  # Khai báo network
    driver: bridge